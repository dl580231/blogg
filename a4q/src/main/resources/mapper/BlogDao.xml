<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuc.a4q.dao.BlogDao" >

  <resultMap id="BaseResultMap" type="com.nuc.a4q.entity.Blog" >
    <id column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="blog_title" property="blogTitle" jdbcType="VARCHAR" />
    <result column="blog_content" property="blogContent" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="enable_view" property="enableView" jdbcType="INTEGER" />
    <result column="read_count" property="readCount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_edit_time" property="lastEditTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="BlogDtoMap" type="com.nuc.a4q.dto.BlogDto" >
  	<association property="blog" javaType="Blog">
  		<id column="blog_id" property="blogId" jdbcType="INTEGER" />
    	<result column="user_id" property="userId" />
    	<result column="blog_title" property="blogTitle" jdbcType="VARCHAR" />
    	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </association>
    <association property="user" javaType="PersonInfo">
    	<id column="user_id" property="userId" />
		<result column="user_name" property="userName" />
    </association>
  </resultMap>
  
  <sql id="Base_Column_List" >
    blog_id, course_id, user_id, blog_title, blog_content, priority, enable_view, read_count, 
    create_time, last_edit_time
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="Blog" useGeneratedKeys="true"
		keyColumn="blog_id" keyProperty="blogId">
    insert into 
    tb_blog (course_id,user_id,blog_title,blog_content,create_time,last_edit_time)
    values (#{courseId},#{userId},#{blogTitle},#{blogContent},#{createTime},#{lastEditTime})
  </insert>
  
  <insert id="insertSelective" parameterType="Blog">
    insert into tb_blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="blogTitle != null" >
        blog_title,
      </if>
      <if test="blogContent != null" >
        blog_content,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="enableView != null" >
        enable_view,
      </if>
      <if test="readCount != null" >
        read_count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastEditTime != null" >
        last_edit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null" >
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null" >
        #{blogContent,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="enableView != null" >
        #{enableView,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        #{readCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.nuc.a4q.entity.Blog" >
    update tb_blog
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null" >
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="blogContent != null" >
        blog_content = #{blogContent,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="enableView != null" >
        enable_view = #{enableView,jdbcType=INTEGER},
      </if>
      <if test="readCount != null" >
        read_count = #{readCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastEditTime != null" >
        last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.nuc.a4q.entity.Blog" >
    update tb_blog
    set course_id = #{courseId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      blog_title = #{blogTitle,jdbcType=VARCHAR},
      blog_content = #{blogContent,jdbcType=VARCHAR},
      priority = #{priority,jdbcType=INTEGER},
      enable_view = #{enableView,jdbcType=INTEGER},
      read_count = #{readCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_edit_time = #{lastEditTime,jdbcType=TIMESTAMP}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>
  
  <update id="readCountAdd" parameterType="int">
		update tb_blog 
		set read_count=read_count+1 
		where blog_id = #{blogId}
  </update>
  
  <select id="getBlogList" parameterType="Blog" resultType="Blog">
  		select *
  		from tb_blog
  		<where>
  			<if test="userId != null">and user_id = #{userId}</if>
  			and enable_view = 1;
  		</where>
  </select>
  
  <select id="getUserRank" resultType="UserRank">
		select count(b.user_id) num,b.user_id,u.user_name
		from tb_blog b,tb_person_info u
		where b.user_id = u.user_id
		GROUP BY user_id
		limit 0,7
	</select>
	
	<select id="getBlogRankByReadCount" resultType="Blog">
		select blog_id,blog_title,read_count
		from tb_blog
		order by read_count DESC
		LIMIT 0,10
	</select>
	
	<select id="queryBlogCount" resultType="int">
		select count(user_id)
		from tb_blog
		where enable_view = 1
	</select>

	<select id="getBlogOrderByPriority" resultMap="BlogDtoMap">
		select blog_id,blog_title,b.create_time,priority,user_name,b.user_id
		from tb_blog b,tb_person_info u
		<where> and enable_view = 1
			  and b.user_id = u.user_id
			  <if test="courseId != null">and course_id = #{courseId}</if>
		</where>
			  order by priority asc
			  limit #{rowStart},#{rowSize}
	</select>
</mapper>